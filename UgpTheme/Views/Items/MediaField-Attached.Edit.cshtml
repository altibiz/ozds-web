@model OrchardCore.Media.ViewModels.EditMediaFieldViewModel
@using OrchardCore.Media.Settings
@using OrchardCore.ContentManagement.Metadata.Models

@{ var settings = Model.PartFieldDefinition.GetSettings<MediaFieldSettings>();
                var mediaFieldId = Html.IdFor(m => m); }

<script asp-src="~/OrchardCore.Media/Scripts/media.js" asp-name="media" at="Foot" depends-on="admin, vuejs, sortable, vuedraggable, jQuery-ui"></script>
<style asp-src="~/OrchardCore.Media/Styles/media.min.css" debug-src="~/OrchardCore.Media/Styles/media.css"></style>

<div class="form-group" id="@mediaFieldId" data-for="@Html.IdFor(m => m.Paths)">
    <label asp-for="Paths">@Model.PartFieldDefinition.DisplayName()</label>

    <input asp-for="Paths" type="hidden" class="paths" :value="paths" data-init="@Model.Paths" />

    <div class="form-control-plaintext media-field-toolbar" v-cloak>
        <div class="btn-group" role="group">
            <input id="@mediaFieldId-field-file-upload" type="file" name="files" >
        </div>
    </div>

    <upload-list id-of-upload-input-field="@mediaFieldId"></upload-list>
    <media-field-thumbs-container :media-items="mediaItems" :thumb-size="thumbSize" :selected-media="selectedMedia" :id-prefix="idPrefix"></media-field-thumbs-container>

</div>


<script at="Foot">
    initializeAttachedMediaField(
        document.getElementById('@mediaFieldId'),
        '@mediaFieldId-field-file-upload',
        '@Url.Action("Upload", "Admin", new { area = "OrchardCore.Media" })',
        '@Url.Action("GetMediaItem", "Admin", new { area = "OrchardCore.Media" })',
        @(settings.Multiple ? "true" : "false"),
        @(settings.AllowMediaText ? "true" : "false"),
        @(settings.AllowAnchors ? "true" : "false"),
        '@Model.TempUploadFolder');
</script>
