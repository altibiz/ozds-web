@page "{contentType}/{contentItemId}"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Configuration
@using Ozds.Modules.Ozds
@using Ozds.Util

@attribute [Authorize(Roles = "Administrator,User")]

@inject IConfiguration Configuration

@{
  ViewLayout = "Layout.Print";

  var contentType = Request.RouteValues.GetNonNullable("contentType");
  var contentItemId = Request.RouteValues.GetNonNullable("contentItemId");
  var contentItem = await Orchard.GetContentItemByIdAsync(contentItemId);
  var headerText = T["Print"].Value;

  var downloadLink = string
    .Format(
      Configuration
        .GetValue<string?>("PrintPdfUrl")
        .ThrowWhenNull(),
      contentItemId,
      string.Format(
        "https://{0}/Ozds.Modules.Ozds/Print/{1}/",
        Request.Host,
        contentItemId));
}

@if (contentItem is null)
{
  headerText = T["Error"].Value;

  <partial name="Header" model="@headerText" />
  <div>
    <h3>
      <p>
        @T["Wrong identifier"]
      </p>
    </h3>
  </div>

  return;
}

@await Orchard.DisplayAsync(contentItem, "Print")

<a href='@downloadLink' target="_blank">
  @T["Download"]
</a>